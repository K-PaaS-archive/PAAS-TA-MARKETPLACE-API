plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
	id 'org.asciidoctor.convert' version '1.5.3'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.openpaas.paasta'

sourceCompatibility = 1.8

jar {
	archivesBaseName = 'marketplace-api'
}

repositories {
    mavenLocal()
	mavenCentral()
}

ext {
	tomcatEmbedJasperVersion = '8.5.32'
	jacocoVersion = '0.8.1'
	snippetsDir = file('build/generated-snippets')
	springBootVersion = '2.1.3.RELEASE';
	springRestdocsVersion = '2.0.3.RELEASE';
	lombokVersion = '1.16.20';
	marketVersion = '0.0.1-SNAPSHOT';
	mysqlConnectorVersion = '8.0.15';
	adonistrackVersion = '0.0.2';
	jossVersion = '0.10.3'
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    compile "org.openpaas.paasta:PAAS-TA-MARKETPLACE-DOMAIN:${marketVersion}"
	compile "org.projectlombok:lombok:${lombokVersion}"
	compile "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
	compile "com.woozooha:adonistrack:${adonistrackVersion}"

	//Java Client for OpenStack Storage
	compile ("org.javaswift:joss:${jossVersion}")
	compile('junit:junit:4.12')
	// https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'


	runtimeOnly "mysql:mysql-connector-java:${mysqlConnectorVersion}"

	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:${springRestdocsVersion}"
    
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${springRestdocsVersion}"
}

jacoco {
	toolVersion = "${jacocoVersion}"
}

test {
    outputs.dir snippetsDir
	ignoreFailures=true
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
	}
}

asciidoctor { 
    inputs.dir snippetsDir 
    dependsOn test 
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
 
    from ("${asciidoctor.outputDir}/html5")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor 
    from ("${asciidoctor.outputDir}/html5") { 
        into 'static/docs'
    }
}

